// DO NOT EDIT THIS FILE!!!
// Make a copy for yourself and work on it there

var data = require('./Solution.js');
var h = require('./Helper.js');

var currDrone = 0;

function checkWH(wh, id, num) {
    return data.warehouses[wh].products[id] >= num;
}

function takeFromWH(wh, id, num) {
    data.warehouses[wh].products[id] = data.warehouses[wh].products[id] - num;
}

var commandCounter = 0;

function deliver(droneID, orderID, currProds) {
    for (var deliverID in currProds) {
        if (!currProds.hasOwnProperty(deliverID)) continue;
        var deliverAmount = currProds[deliverID];
        h.deliver(droneID, orderID, deliverID, deliverAmount);
        commandCounter++;
    }
}

setTimeout(function () {

    var xy = [data.warehouses[0].x, data.warehouses[0].y]

    var orderDistances = [];
    var ordersNum = 1000;
    for(var i = 0; i < ordersNum; i++) {
        var order = data.orders[i];
        orderDistances[i] = [];
        orderDistances[i] = {
            id: i,
            distance: Math.round(Math.sqrt(Math.abs(xy[0] - order.x) + Math.abs(xy[1] - order.y)))
        }
    }
    for(var i = 0; i < ordersNum; i++) {
        for(var k = 0; k < ordersNum - 1; k++) {
            var temp = orderDistances[k];
            if(orderDistances[k]['distance'] > orderDistances[k + 1]['distance']) {
                orderDistances[k] = orderDistances[k + 1];
                orderDistances[k + 1] = temp;
            }
        }
    }

    //TODO:
    var warehouses = data.warehouses;

    var droneID = -1;
    var ordersProcessed = 1000;
    prderLoop : for(var orderIndex = 0; orderIndex < ordersProcessed; orderIndex++) {
        var orderID = orderDistances[orderIndex]['id'];
        var order = data.orders[orderID];

        // Making an object will all products to deliver and their quantities
        var prods = {};
        var totalProds = 0;
        for (var prod = 0; prod < order.productsNum; prod++) {
            var prodID = order.productsIDs[prod];
            totalProds++;
            if (prods[prodID] == null)
                prods[prodID] = 1;
            else
                prods[prodID]++;
        }

        droneLoop : while(totalProds > 0) {
            droneID++;
            if(droneID >= data.drones) droneID = 0;
            var currWeight = 0;
            var currProds = {};
            var prodsCopy = {};
            for(var k in prods) prodsCopy[k]=prods[k];
            prodLoop : for (var prodID in prodsCopy) {
                if (!prodsCopy.hasOwnProperty(prodID)) continue;
                var amount = prodsCopy[prodID];
                var singleWeight = data.products[prodID];
                if (amount <= 0) continue;
                var toLoad = amount;
                while(currWeight + singleWeight * toLoad > data.payload) {
                    toLoad--;
                    if(toLoad <= 0) {
                        deliver(droneID, orderID, currProds);
                        continue droneLoop;
                    }
                }
                currWeight += toLoad * singleWeight;
                for(var WHID = 0; WHID < data.warehousesNum; WHID++) {
                    if(checkWH(WHID, prodID, toLoad)) {
                        takeFromWH(WHID, prodID, toLoad);
                        currProds[prodID] = toLoad;
                        totalProds -= toLoad;
                        prods[prodID] -= toLoad;
                        h.load(droneID, WHID, prodID, toLoad);
                        commandCounter++;
                        continue prodLoop;
                    }
                }
                return;
            }
            deliver(droneID, orderID, currProds);
        }

    }
    console.log(commandCounter);

}, 400)